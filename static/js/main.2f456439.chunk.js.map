{"version":3,"sources":["MortgageCalculator.js","App.js","serviceWorker.js","index.js"],"names":["MortgageCalculator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","test","console","log","react_default","a","createElement","Row","Col","sm","Card","Body","Form","Group","as","controlId","Label","column","Control","defaultValue","Button","type","React","Component","App","Navbar","bg","variant","Brand","href","Container","id","src_MortgageCalculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f456439.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Form, FormControl, InputGroup, Card, Row, Col } from 'react-bootstrap';\n\nclass MortgageCalculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            test: 1\n        }\n    }\n    render () {\n        console.log(this.props);\n        return (\n            <Row>\n                <Col sm=\"6\">\n                    <Card>\n                        <Card.Body>\n                            <Form>\n                                <Form.Group as={Row} controlId=\"formGridMortgageAmount\">\n                                    <Form.Label column sm={4}>Mortgage Amount</Form.Label>\n                                    <Col sm={8}>\n                                        <Form.Control defaultValue=\"100000\"/>\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formGridInterestRate\">\n                                    <Form.Label column sm={4}>Interest Rate</Form.Label>\n                                    <Col sm={8}>\n                                        <Form.Control defaultValue=\"3.50\"/>\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formGridAmortizationPeriod\">\n                                    <Form.Label column sm={4}>Amortization Period</Form.Label>\n                                    <Col sm={8}>\n                                        <Form.Control as=\"select\" defaultValue=\"25\">\n                                            <option>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n                                            <option>6</option>\n                                            <option>7</option>\n                                            <option>8</option>\n                                            <option>9</option>\n                                            <option>10</option>\n                                            <option>11</option>\n                                            <option>12</option>\n                                            <option>13</option>\n                                            <option>14</option>\n                                            <option>15</option>\n                                            <option>16</option>\n                                            <option>17</option>\n                                            <option>18</option>\n                                            <option>19</option>\n                                            <option>20</option>\n                                            <option>21</option>\n                                            <option>22</option>\n                                            <option>23</option>\n                                            <option>24</option>\n                                            <option>25</option>\n                                            <option>26</option>\n                                            <option>27</option>\n                                            <option>28</option>\n                                            <option>29</option>\n                                            <option>30</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formGridPaymentFrequency\">\n                                    <Form.Label column sm={4}>Payment Frequency</Form.Label>\n                                    <Col sm={8}>\n                                        <Form.Control as=\"select\" defaultValue=\"Monthly\">\n                                            <option>Weekly</option>\n                                            <option>Bi-Weekly</option>\n                                            <option>Semi-Monthly</option>\n                                            <option>Monthly</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formGridTerm\">\n                                    <Form.Label column sm={4}>Term</Form.Label>\n                                    <Col sm={8}>\n                                        <Form.Control as=\"select\" defaultValue=\"5\">\n                                            <option>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n                                            <option>6</option>\n                                            <option>7</option>\n                                            <option>8</option>\n                                            <option>9</option>\n                                            <option>10</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                                <Button type=\"submit\">\n                                    Calculate\n                                </Button>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm=\"6\">\n                    <p>Results</p>\n                </Col>\n            </Row>\n        );\n    }\n}\nexport default MortgageCalculator;","import React from 'react';\nimport './App.css';\nimport { Navbar, Container } from 'react-bootstrap';\nimport MortgageCalculator from './MortgageCalculator';\n\n\nfunction App() {\n  return (\n    <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">Mortgage Calculator</Navbar.Brand>\n        </Navbar>\n        <Container id=\"mainContainer\">\n          <MortgageCalculator></MortgageCalculator>\n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}